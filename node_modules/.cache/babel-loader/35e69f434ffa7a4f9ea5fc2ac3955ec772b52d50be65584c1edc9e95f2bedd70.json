{"ast":null,"code":"class SpeechManager {\n  constructor() {\n    this.speechSynthesis = window.speechSynthesis;\n    this.currentUtterance = null;\n    this.isPlaying = false;\n    this.onStateChange = null;\n    this.queue = [];\n    this.isProcessingQueue = false;\n\n    // Configure default voice\n    this.setPreferredVoice();\n  }\n  setPreferredVoice() {\n    // Wait for voices to be loaded\n    if (this.speechSynthesis.getVoices().length === 0) {\n      this.speechSynthesis.addEventListener('voiceschanged', () => {\n        this.selectVoice();\n      });\n    } else {\n      this.selectVoice();\n    }\n  }\n  selectVoice() {\n    const voices = this.speechSynthesis.getVoices();\n    this.preferredVoice = voices.find(voice => voice.lang === 'en-US' && voice.name.includes('Female')) || voices.find(voice => voice.lang === 'en-US') || voices[0];\n  }\n  speak(text, onStart, onEnd, onError) {\n    // Add to queue\n    this.queue.push({\n      text,\n      onStart,\n      onEnd,\n      onError\n    });\n\n    // Process queue if not already processing\n    if (!this.isProcessingQueue) {\n      this.processQueue();\n    }\n  }\n  async processQueue() {\n    if (this.queue.length === 0) {\n      this.isProcessingQueue = false;\n      return;\n    }\n    this.isProcessingQueue = true;\n    const {\n      text,\n      onStart,\n      onEnd,\n      onError\n    } = this.queue.shift();\n    try {\n      await this.speakText(text, onStart, onEnd, onError);\n      this.processQueue();\n    } catch (error) {\n      onError === null || onError === void 0 ? void 0 : onError(error);\n      this.processQueue();\n    }\n  }\n  speakText(text, onStart, onEnd, onError) {\n    return new Promise((resolve, reject) => {\n      this.stop();\n      this.currentUtterance = new SpeechSynthesisUtterance(text);\n      this.currentUtterance.voice = this.preferredVoice;\n      this.currentUtterance.rate = 1;\n      this.currentUtterance.pitch = 1;\n      this.currentUtterance.onstart = () => {\n        var _this$onStateChange;\n        this.isPlaying = true;\n        onStart === null || onStart === void 0 ? void 0 : onStart();\n        (_this$onStateChange = this.onStateChange) === null || _this$onStateChange === void 0 ? void 0 : _this$onStateChange.call(this, true);\n      };\n      this.currentUtterance.onend = () => {\n        var _this$onStateChange2;\n        this.isPlaying = false;\n        this.currentUtterance = null;\n        onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n        (_this$onStateChange2 = this.onStateChange) === null || _this$onStateChange2 === void 0 ? void 0 : _this$onStateChange2.call(this, false);\n        resolve();\n      };\n      this.currentUtterance.onerror = error => {\n        var _this$onStateChange3;\n        console.error('Speech synthesis error:', error);\n        this.isPlaying = false;\n        this.currentUtterance = null;\n        onError === null || onError === void 0 ? void 0 : onError(error);\n        (_this$onStateChange3 = this.onStateChange) === null || _this$onStateChange3 === void 0 ? void 0 : _this$onStateChange3.call(this, false);\n        reject(error);\n      };\n\n      // Break long text into sentences for better handling\n      const sentences = text.match(/[^.!?]+[.!?]+/g) || [text];\n      this.currentUtterance.text = sentences.join(' ');\n      this.speechSynthesis.speak(this.currentUtterance);\n    });\n  }\n  pause() {\n    if (this.isPlaying) {\n      var _this$onStateChange4;\n      this.speechSynthesis.pause();\n      this.isPlaying = false;\n      (_this$onStateChange4 = this.onStateChange) === null || _this$onStateChange4 === void 0 ? void 0 : _this$onStateChange4.call(this, false);\n    }\n  }\n  resume() {\n    if (this.currentUtterance && !this.isPlaying) {\n      var _this$onStateChange5;\n      this.speechSynthesis.resume();\n      this.isPlaying = true;\n      (_this$onStateChange5 = this.onStateChange) === null || _this$onStateChange5 === void 0 ? void 0 : _this$onStateChange5.call(this, true);\n    }\n  }\n  stop() {\n    var _this$onStateChange6;\n    this.speechSynthesis.cancel();\n    this.isPlaying = false;\n    this.currentUtterance = null;\n    (_this$onStateChange6 = this.onStateChange) === null || _this$onStateChange6 === void 0 ? void 0 : _this$onStateChange6.call(this, false);\n    this.queue = [];\n    this.isProcessingQueue = false;\n  }\n  setStateChangeCallback(callback) {\n    this.onStateChange = callback;\n  }\n}\nexport default SpeechManager;","map":{"version":3,"names":["SpeechManager","constructor","speechSynthesis","window","currentUtterance","isPlaying","onStateChange","queue","isProcessingQueue","setPreferredVoice","getVoices","length","addEventListener","selectVoice","voices","preferredVoice","find","voice","lang","name","includes","speak","text","onStart","onEnd","onError","push","processQueue","shift","speakText","error","Promise","resolve","reject","stop","SpeechSynthesisUtterance","rate","pitch","onstart","_this$onStateChange","call","onend","_this$onStateChange2","onerror","_this$onStateChange3","console","sentences","match","join","pause","_this$onStateChange4","resume","_this$onStateChange5","_this$onStateChange6","cancel","setStateChangeCallback","callback"],"sources":["/Users/jaypatel/Desktop/with AWS voice/May-original/virtualbudtender/src/utils/SpeechManager.js"],"sourcesContent":["class SpeechManager {\n  constructor() {\n    this.speechSynthesis = window.speechSynthesis;\n    this.currentUtterance = null;\n    this.isPlaying = false;\n    this.onStateChange = null;\n    this.queue = [];\n    this.isProcessingQueue = false;\n\n    // Configure default voice\n    this.setPreferredVoice();\n  }\n\n  setPreferredVoice() {\n    // Wait for voices to be loaded\n    if (this.speechSynthesis.getVoices().length === 0) {\n      this.speechSynthesis.addEventListener('voiceschanged', () => {\n        this.selectVoice();\n      });\n    } else {\n      this.selectVoice();\n    }\n  }\n\n  selectVoice() {\n    const voices = this.speechSynthesis.getVoices();\n    this.preferredVoice = voices.find(voice => \n      voice.lang === 'en-US' && voice.name.includes('Female')\n    ) || voices.find(voice => \n      voice.lang === 'en-US'\n    ) || voices[0];\n  }\n\n  speak(text, onStart, onEnd, onError) {\n    // Add to queue\n    this.queue.push({ text, onStart, onEnd, onError });\n    \n    // Process queue if not already processing\n    if (!this.isProcessingQueue) {\n      this.processQueue();\n    }\n  }\n\n  async processQueue() {\n    if (this.queue.length === 0) {\n      this.isProcessingQueue = false;\n      return;\n    }\n\n    this.isProcessingQueue = true;\n    const { text, onStart, onEnd, onError } = this.queue.shift();\n\n    try {\n      await this.speakText(text, onStart, onEnd, onError);\n      this.processQueue();\n    } catch (error) {\n      onError?.(error);\n      this.processQueue();\n    }\n  }\n\n  speakText(text, onStart, onEnd, onError) {\n    return new Promise((resolve, reject) => {\n      this.stop();\n\n      this.currentUtterance = new SpeechSynthesisUtterance(text);\n      this.currentUtterance.voice = this.preferredVoice;\n      this.currentUtterance.rate = 1;\n      this.currentUtterance.pitch = 1;\n\n      this.currentUtterance.onstart = () => {\n        this.isPlaying = true;\n        onStart?.();\n        this.onStateChange?.(true);\n      };\n\n      this.currentUtterance.onend = () => {\n        this.isPlaying = false;\n        this.currentUtterance = null;\n        onEnd?.();\n        this.onStateChange?.(false);\n        resolve();\n      };\n\n      this.currentUtterance.onerror = (error) => {\n        console.error('Speech synthesis error:', error);\n        this.isPlaying = false;\n        this.currentUtterance = null;\n        onError?.(error);\n        this.onStateChange?.(false);\n        reject(error);\n      };\n\n      // Break long text into sentences for better handling\n      const sentences = text.match(/[^.!?]+[.!?]+/g) || [text];\n      this.currentUtterance.text = sentences.join(' ');\n\n      this.speechSynthesis.speak(this.currentUtterance);\n    });\n  }\n\n  pause() {\n    if (this.isPlaying) {\n      this.speechSynthesis.pause();\n      this.isPlaying = false;\n      this.onStateChange?.(false);\n    }\n  }\n\n  resume() {\n    if (this.currentUtterance && !this.isPlaying) {\n      this.speechSynthesis.resume();\n      this.isPlaying = true;\n      this.onStateChange?.(true);\n    }\n  }\n\n  stop() {\n    this.speechSynthesis.cancel();\n    this.isPlaying = false;\n    this.currentUtterance = null;\n    this.onStateChange?.(false);\n    this.queue = [];\n    this.isProcessingQueue = false;\n  }\n\n  setStateChangeCallback(callback) {\n    this.onStateChange = callback;\n  }\n}\n\nexport default SpeechManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}